@page "/matrix"

@using CalculationMethods.Core.Entities
@using CalculationMethods.Infrastructure.Entities.Double

<MudGrid Justify="Justify.Center">
    <MudItem xs="1" Class="align-self-center">
        <MudText Align="Align.Center" Typo="Typo.h4">@Name = </MudText>
    </MudItem>
    <MudItem xs="11">
        @if (Matrix == null)
        {
            <MudProgressCircular Indeterminate="true"></MudProgressCircular>
        }
        else
        {
            <MudSimpleTable Striped="false" Bordered="true">
                <tbody>
                    @for (int i = 0; i < Matrix.RowsCount; i++)
                    {
                        int row = i;
                        <tr>
                            @for (int j = 0; j < Matrix.ColsCount; j++)
                            {
                                int col = j;
                                <td>
                                    <MudNumericField @bind-Value="Matrix[row, col]" Variant="Variant.Text" Step="0.25"/>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
        }
    </MudItem>
</MudGrid>


@code {
    [Parameter]
    public IMatrix<double> Matrix { get; set; }
    [Parameter]
    public string Name { get; set; } = "A";

    protected override void OnInitialized()
    {
        Matrix = new DoubleSquareMatrix(5);
        base.OnInitialized();
    }
}

